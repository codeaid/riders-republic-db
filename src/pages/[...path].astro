---
import type { GetStaticPathsResult } from 'astro';
import { Debug } from 'astro:components';
import Tabs from 'components/Tabs.astro';
import Tab from 'components/Tabs/Tab.astro';
import Layout from 'layouts/Layout.astro';
import { air, bmx, bikes, snow } from 'config/gear';
import { getStaticRouterPaths } from 'lib/routing';
import { CategoryEntity, DisciplineEntity } from 'types/core';

interface Props {
  category: CategoryEntity;
  discipline?: DisciplineEntity;
}

export async function getStaticPaths() {
  return [...air, ...bmx, ...bikes, ...snow].reduce<GetStaticPathsResult>(
    (acc, category) => acc.concat(getStaticRouterPaths(category)),
    [],
  );
}

const { category, discipline } = Astro.props;

const specializations = discipline
  ? discipline.specializations
  : category.specializations;
---

<Layout>
  <Tabs>
    {
      specializations.map(specialization => (
        <Tab active={false} href={specialization.slug}>
          {specialization.name}
        </Tab>
      ))
    }
  </Tabs>

  <Debug {category} />
  <Debug {discipline ?? null} />
</Layout>
